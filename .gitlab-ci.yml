stages:
    - build
    - unit_tests
    - deploy

build:
    image: epitechcontent/epitest-docker
    stage: build
    script:
        - make re

server_test:
    image: epitechcontent/epitest-docker
    stage: unit_tests
    script:
        - make -C library/csv/
        - make -C library/linked_list
        - make -C Server build_tests
        - ./Server/tests_run -f

graph_test:
    image: epitechcontent/epitest-docker
    stage: unit_tests
    script:
        - make -C Graphical build_tests
        - ./Graphical/tests_run -f

csv_test:
    image: epitechcontent/epitest-docker
    stage: unit_tests
    script:
        - make -C library/csv build_tests
        - ./library/csv/tests_run -f

linked_list_test:
    image: epitechcontent/epitest-docker
    stage: unit_tests
    script:
        - make -C library/linked_list build_tests
        - ./library/linked_list/tests_run -f

covering:
    image: epitechcontent/epitest-docker
    stage: unit_tests
    script:
        - make tests_run

full_deploy:
    stage: deploy
    only:
        - master
    script:
        - echo "Pushing to $TARGET_REPO"
        - mkdir -p ~./ssh
        - echo "$SSH_PRIVATE_KEY" > ~/.ssh/epitech
        - chmod 600 ~/.ssh/epitech
        - git config core.sshCommand "ssh -o \"StrictHostKeyChecking=no\" -i ~/.ssh/epitech -F /dev/null"
        - git remote remove epitech || true
        - git remote add epitech $TARGET_REPO || true
        - git push epitech HEAD:$CI_COMMIT_REF_NAME
        - git config --unset core.sshCommand
        - rm -rf ~/.ssh/epitech
